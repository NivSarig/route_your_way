from external_integrations.gmaps_integration_utils import generate_random_coordinates

from external_integrations.optimization_engine_utils import get_distance_and_duration_from_game_id, \
    get_distance_and_duration_from_game_id_and_compare_with_brute
# from logging_utils import formatted_now
import logging
logger = logging.getLogger(__name__)


if __name__ == "__main__":
    randomize = False
    city = "Moscow"
    num_coordinates = 10

    if randomize:
        url, coordinates = generate_random_coordinates(city, num_coordinates)
    else:
        url = "https://www.google.com/maps/dir/55.8851468503753%2037.51883085420433/55.64084712224211%2037.63753714586377/55.63171357216796%2037.567176092581796/55.71061470072395%2037.645024291490905/55.79635556987808%2037.705739569659144/55.73625845994696%2037.474939644984126/55.6055236828096%2037.55303667588389/55.82474622577668%2037.487459359835334/55.77313511263688%2037.478889483443794/55.767957973285405%2037.48903720422404/@55.767957973285405%2037.48903720422404,16.18z/data=!4m2!4m1!3e0?entry=ttu"
        coordinates = [(55.8851468503753, 37.51883085420433),
                       (55.64084712224211, 37.63753714586377),
                       (55.63171357216796, 37.567176092581796),
                       (55.71061470072395, 37.645024291490905),
                       (55.79635556987808, 37.705739569659144),
                       (55.73625845994696, 37.474939644984126),
                       (55.6055236828096, 37.55303667588389),
                       (55.82474622577668, 37.487459359835334),
                       (55.77313511263688, 37.478889483443794),
                       (55.767957973285405, 37.48903720422404)]
    # log(url)
    # log(coordinates)

    new_url = "https://www.google.com/maps/dir/55.78879096471749+37.56912052075894/55.82394492336372+37.71564443590594/55.718563249961306+37.51647539470249/55.775807492867564+37.51946053900027/55.690901822366115+37.46013158008646/55.80069715769361+37.56576992130943/55.60486832825113+37.466155203107114/55.78130697817363+37.46718729666109/55.70319444748+37.63345154478967/55.843094719260534+37.47741722330984/@55.7272268,37.3982661,11z/data=!3m1!4b1!4m62!4m61!1m5!1m1!1s0x0:0xfebb1ddabbd58077!2m2!1d37.5685818!2d55.7885064!1m5!1m1!1s0x0:0x865d4de12b4564b6!2m2!1d37.716047!2d55.8236744!1m5!1m1!1s0x0:0x5df7cd41dca8f173!2m2!1d37.5139163!2d55.7061335!1m5!1m1!1s0x0:0x8439f8542df1d9a4!2m2!1d37.5198347!2d55.7759439!1m5!1m1!1s0x0:0xd0422de2cbc7203f!2m2!1d37.4600474!2d55.6907233!1m5!1m1!1s0x0:0x9e8663cc32912aa7!2m2!1d37.5659516!2d55.8008145!1m5!1m1!1s0x0:0x23dd95533621b43b!2m2!1d37.4623676!2d55.6028596!1m5!1m1!1s0x0:0x76d30e134b59d2a1!2m2!1d37.4773823!2d55.7750483!1m5!1m1!1s0x0:0xfd468a8f9cf66ed8!2m2!1d37.6333575!2d55.7028242!1m5!1m1!1s0x0:0xa0c2634c7f03102d!2m2!1d37.4773427!2d55.8429622!3e0?entry=ttu"
    # distance, duration = get_route_info_from_url(new_url)
    # log((distance, duration))

    short_coordinates = [
        (55.8851468503753, 37.51883085420433),
        (55.64084712224211, 37.63753714586377),
    ]
    locations = {
        "Short": [
        (55.8851468503753, 37.51883085420433),
        (55.64084712224211, 37.63753714586377),
    ],
        "Short3": [
        (55.8851468503753, 37.51883085420433),
        (55.64084712224211, 37.63753714586377),
        (55.74084712224211, 37.33753714586377),
    ],
        "Short5": [
        (55.8851468503753, 37.51883085420433),
        (55.64084712224211, 37.63753714586377),
        (55.74084712224211, 37.33753714586377),
        (55.44084712224211, 37.23753714586377),
    ],
        "Short4": [
        (55.8851468503753, 37.51883085420433),
        (55.64084712224211, 37.63753714586377),
        (55.74084712224211, 37.33753714586377),
        (55.44084712224211, 37.23753714586377),
        (55.44084712224211, 37.43753714586377),
    ],
        "TelAviv": [
            [32.1732507, 34.7894517],
            [32.0694666, 34.7699549],
            [32.0737261, 34.765359],
            [32.1145883, 34.8015212],
            [32.0779325, 34.7741353],
            [32.0610971, 34.7919043],
            [32.0810915, 34.7889161],
            [32.0633681, 34.7728317],
            [32.0728065, 34.7948381]
        ],
        "TelAviv6": [
            [32.1732507, 34.7894517],
            [32.0694666, 34.7699549],
            [32.0737261, 34.765359],
            [32.1145883, 34.8015212],
            [32.0779325, 34.7741353],
            [32.0610971, 34.7919043],

        ],
        "TelAvivBad": [
            [32.0732507, 34.7894517],
            [32.0694666, 34.7699549],
            [32.0737261, 34.765359],
            [32.1145883, 34.8015212],
            [32.0779325, 34.7741353],
            [32.0610971, 34.7919043],
            [32.0810915, 34.7889161],
            [32.0633681, 34.7728317],
            [32.0728065, 34.7948381]
        ],
        "London11": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.515942, -0.0908033],
        ],
        "London8": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782]
        ],
        "London9": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162]
        ],
        "London10": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
        ],
        "London20": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.6229532, -0.0905527],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468],
            [51.5183975, -0.08886],
            [51.5305595, -0.0480812],
            [51.5327271, -0.1025782],
            [51.5468766, -0.1045162],
            [51.522813, -0.0936868],
        ],
        "London19": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.6229532, -0.0905527],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468],
            [51.5183975, -0.08886],
            [51.5305595, -0.0480812],
            [51.5327271, -0.1025782],
            [51.5468766, -0.1045162],
        ],
        "London18": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.6229532, -0.0905527],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468],
            [51.5183975, -0.08886],
            [51.5305595, -0.0480812],
            [51.5327271, -0.1025782],
        ],
        "London17": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.6229532, -0.0905527],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468],
            [51.5183975, -0.08886],
            [51.5305595, -0.0480812]
        ],
        "London16": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.6229532, -0.0905527],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468],
            [51.5183975, -0.08886],
        ],
        "London15": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.6229532, -0.0905527],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468]
        ],
        "London-": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -1.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468]
        ],
        "London+": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
            [51.5205595, -0.0380812],
            [51.5227271, -0.0925782],
            [51.5368766, -0.0945162],
            [51.512813, -0.0836868],
            [51.5290351, -0.0804977],
            [51.5389369, -0.0720099],
            [51.5263462, -0.0568525],
            [51.5422395, -0.0982468]
        ],
        "London6": [
            [51.5229532, -0.0805527],
            [51.5190351, -0.0704977],
            [51.5289369, -0.0620099],
            [51.5163462, -0.0468525],
            [51.5322395, -0.0882468],
            [51.5083975, -0.07886],
        ],
    "Paris": [
        [48.8566, 2.3522],
        [48.877807, 2.351152],
        [48.8516, 2.3772],
        [48.850638, 2.292321],
        [48.8738, 2.295],
        [48.8501, 2.2679],
        [48.8422, 2.3276],
        [48.861, 2.3995],
        [48.8683, 2.3425],
        [48.832, 2.3551],
    ],
    "New York10": [
        [40.7293, -73.9844],
        [40.7380, -74.0027],
        [40.7165, -73.9946],
        [40.7265, -73.9515],
        [40.7143, -73.9980],
        [40.7041, -73.9580],
        [40.7561, -73.9903],
        [40.7434, -73.9505],
        [40.6947, -73.9213],
        [40.7484, -73.9879],
    ],
    "Sao Paulo": [
        [-23.5505, -46.6333],
        [-23.5610, -46.6550],
        [-23.5632, -46.6544],
        [-23.5431, -46.6298],
        [-23.5489, -46.6388],
        [-23.5760, -46.6470],
        [-23.5629, -46.6860],
        [-23.5558, -46.6618],
        [-23.6072, -46.6342],
        [-23.5852, -46.6742],
    ],
        # London
        'London': [
            [51.5194, -0.1270],  # The British Museum
            [51.5081, -0.0759],  # Tower of London
            [51.5115, -0.1234],  # Covent Garden
            [51.5101, -0.1340],  # Piccadilly Circus
            [51.4769, -0.0005],  # Greenwich Park
            [51.5566, -0.1781],  # Hampstead Heath
            [51.4784, -0.1542],  # Battersea Park
            [51.5306, -0.1230],  # King's Cross Station
            [51.4780, -0.2950],  # Kew Gardens
            [51.4343, -0.2145],  # Wimbledon Tennis Club
            [51.5942, -0.1300],  # Alexandra Palace
            [51.5053, 0.0542],  # London City Airport
            [51.4182, -0.0719],  # Crystal Palace Park
            [51.5609, -0.0078]  # Leyton Orient Football Club
        ],
        'New York': [
            [40.7580, -73.9855],  # Times Square
            # [40.6413, -73.7781],  # JFK Airport
            [40.5749, -73.9859],  # Coney Island
            [40.7516, -73.8267],  # Queens Botanical Garden
            [40.8075, -73.9626],  # Columbia University
            [40.6718, -73.9637],  # Brooklyn Museum
            [40.8689, -73.8100],  # Pelham Bay Park
            # [40.7769, -73.8740],  # LaGuardia Airport
            [40.8623, -73.8800],  # New York Botanical Garden
            [40.5795, -73.8373],  # Rockaway Beach
            [40.6437, -74.0736],  # Staten Island Ferry Terminal
            [40.8104, -73.9153]  # St Mary’s Park
        ],
        'San Francisco': [
            [37.7734, -122.4680],  # Golden Gate Park
            [37.7617, -122.4468],  # Tank Hill
            [37.7492, -122.4569],  # Laguna Hospital
            [37.7210, -122.4441],  # Balboa Park
            [37.7356, -122.5057],  # San Francisco Zoo
            [37.7335, -122.4343],  # Glen Park
            [37.7439, -122.4133],  # Bernal Heights Park
            [37.7595, -122.5102],  # Ocean Beach
            [37.7617, -122.4258],  # Dolores Street and 18th Street Intersection
            [37.7404, -122.4658],  # West Portal
            [37.7850, -122.4292],  # Japantown
            [37.7510, -122.4332],  # Noe Valley
            [37.7599, -122.3977],  # Potrero Hill
            [37.7484, -122.4803],  # Sunset District
        ]
    }
    game_id = "London"
    game_id = "SaoPaulo"
    game_id = "San Francisco"
    benchmarking_with_brute = False

    if not benchmarking_with_brute:
        short_coordinates = locations[game_id]

        # short_coordinates = short_coordinates + [[la+1, lo-1] for la,lo in short_coordinates]

        url, distance, duration, coordinates = get_distance_and_duration_from_game_id(
                short_coordinates, game_id, use_cache=use_cache)
        print("url: {}, distance: {}, duration: {}, game_id: {}".format(url, distance, duration, game_id))
    else:
        all_games = {}
        for game_id in ['TelAviv', 'TelAviv6', 'TelAvivBad', 'London8', 'London9',
                        'London10', 'London6', 'Paris', 'New York10', "Sao Paulo", "San Francisco",
                        "New York", "London"]:
            short_coordinates = locations[game_id]
            url, distance, duration, coordinates, brute_stops, stops = \
                get_distance_and_duration_from_game_id_and_compare_with_brute(
                    short_coordinates, game_id, use_cache=use_cache, location=game_id)
            print("url: {}, distance: {}, duration: {}, game_id: {}".format(url, distance, duration, game_id))
            all_games[game_id] = {"game_id": game_id, "brute_stops": brute_stops, "stops": stops}

        for game_id, game in all_games.items():
            print(game_id)
            print(game['brute_stops'])
            print(game['stops'])
